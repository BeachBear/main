function GetCurrentMap()
    for _,v in ipairs(workspace:GetChildren()) do
        local m = v:FindFirstChild("Map"); if m then
            return m
        end
    end
    return nil
end
function GetMatchingTiles(brickcolor)
    local map = GetCurrentMap()
    local matching = {}; for _,t in ipairs(map:GetChildren()) do
        if t.BrickColor == brickcolor then
            matching[#matching+1] = t
        end
    end
    return #matching > 0 and matching or nil
end

local rng = Random.new()
local plr = game:GetService("Players").LocalPlayer
local playing = plr:FindFirstChild("Playing")

local main = plr.PlayerGui.Main
local colorFrame = main.GameProgress.Color
colorFrame:GetPropertyChangedSignal("BackgroundTransparency"):Connect(function()
    if colorFrame.BackgroundTransparency == 0 and playing.Value == true then
        wait(0.1)

        local tiles = GetMatchingTiles(colorFrame.BackgroundColor)
        plr.Character.HumanoidRootPart.Anchored = false
        plr.Character.HumanoidRootPart.CFrame = CFrame.new(tiles[rng:NextInteger(1,#tiles)].Position + Vector3.new(0,3,0))
        plr.Character.HumanoidRootPart.Anchored = true
    end
end)
